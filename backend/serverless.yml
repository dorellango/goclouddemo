# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: go-cloud-test
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name
plugins:
  - serverless-pseudo-parameters
  - serverless-dynamodb-local
  - serverless-offline
# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'local'}
  profile: ${opt:profile, 'default'}
  region: ${file(config/config.${self:provider.stage}.json):REGION, 'us-east-1'

environment:
  STAGE: ${self:provider.stage}
  SLS_DEBUG: ${file(config/config.${self:provider.stage}.json):SLS_DEBUG, 'false'}

iamRoleStatements:
  - Effect: "Allow"
    Action:
      - "dynamodb:Scan"
      - "dynamodb:Query"
      - "dynamodb:GetItem"
      - "dynamodb:UpdateItem"
      - "dynamodb:PutItem"
      - "dynamodb:BatchWriteItem"
    Resource:
      - arn:aws:dynamodb:${self:provider.region}:#{AWS::AccountId}:table/${self:custom.dynamoTableSubscriptions}
      - arn:aws:dynamodb:${self:provider.region}:#{AWS::AccountId}:table/${self:custom.dynamoTableSubscriptions}/index/*

functions:
  subscriptions:
    handler: subscriptions.handler
    events:
      - http:
          path: landing/subscriptions
          method: POST
          cors: true
          request:
            schema:
              application/json: ${file(schemas/suscriptionsCreate.json)}

# CloudFormation resources
resources:
  # DynamoDB
  - ${file(resources/dynamoTables/suscriptionsTable.yml)}

custom:
  dynamoTableSubscriptions: gco_suscriptions_${self:provider.stage}
  # This is for local dynamodb development, start on dev env and always migrate
  dynamodb:
    stages:
      - local
    start:
      migrate: true
